name: pg_jts CI
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'doc/**'
jobs:
  tests:
    name: Py${{ matrix.python-version }} / Pg${{ matrix.postgres-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
        postgres-version: [10, 11, 12]
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout latest commit
        uses: actions/checkout@v2
      - name: Install python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Cache Pipenv virtualenv
        uses: actions/cache@v2
        id: pipenv-cache
        with:
          path: ~/.pipenv
          key: ${{ runner.os }}-pipenv-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-v2-
      - name: Install Dependencies
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.pipenv/virtualenvs
          PIPENV_CACHE_DIR: ~/.pipenv/pipcache
        run: pipenv install --dev
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
      - name: Run tests
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.pipenv/virtualenvs
          PYTHONPATH: '.'
          POSTGRESQL_DSN: 'host=localhost dbname=postgres user=postgres password=postgres port=${{ job.services.postgres.ports[5432] }}'
        run: |
          pipenv run tox
